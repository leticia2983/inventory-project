kind: Service
apiVersion: v1
metadata:
  name: "{{ .Values.backendservicename }}"
  labels:
    name: backend-app
spec:
  ports:
    - nodePort: {{ .Values.nodePortnumber }}
      port: {{ .Values.portnumber }}
      targetPort: {{ .Values.targetPortnumber }}
      protocol: "{{ .Values.protocoltype }}"
  selector:
    app: backend-app
  type: "{{ .Values.porttype }}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.backend_app_deploymentname }}"
spec:
  selector:
    matchLabels:
      app: backend-app
  replicas: 1
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
        - name: backend-app
          image: "{{ .Values.imagenamebackend }}:{{ .Values.imagebackendtag }}"
          ports:
            - containerPort: {{ .Values.containerPortnumber }}
          env: # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom:
                configMapKeyRef:
                  name: db-config  # name of configMap
                  key: host
            - name: DB_NAME  # Setting Database name from configMap
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: name
            - name: DB_USERNAME  # Setting Database username from Secret
              valueFrom:
                secretKeyRef:
                  name: db-user # Secret Name
                  key: username
            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: db-user
                  key: password